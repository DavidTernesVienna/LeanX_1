name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web assets
        run: npm run build

      - name: Generate Capacitor Android project
        run: |
          if [ ! -d android ]; then
            npx cap add android
          fi

      - name: Synchronize Capacitor Android project
        run: npx cap sync android

      - name: Generate signing keystore
        run: |
          keytool -genkeypair -v \
            -keystore android/app/leanx-release.keystore \
            -alias leanx \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=LeanX, OU=LeanX, O=LeanX, L=Berlin, S=Berlin, C=DE" \
            -storepass "Yesbody" \
            -keypass "Yesbody"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Assemble Android release
        working-directory: android
        run: ./gradlew assembleRelease

      - name: Align and sign APK
        id: sign-apk
        run: |
          set -euo pipefail
          RELEASE_DIR="android/app/build/outputs/apk/release"
          UNSIGNED_APK="$(find "$RELEASE_DIR" -name '*-unsigned.apk' -print -quit)"
          if [ -z "$UNSIGNED_APK" ]; then
            echo "Could not locate unsigned APK in $RELEASE_DIR" >&2
            ls -R "$RELEASE_DIR" >&2 || true
            exit 1
          fi

          SDK_ROOT="${ANDROID_SDK_ROOT:-${ANDROID_HOME:-}}"
          if [ -z "$SDK_ROOT" ]; then
            echo "Android SDK path not found" >&2
            exit 1
          fi

          ZIPALIGN="$(find "$SDK_ROOT"/build-tools -name zipalign -print -quit)"
          APKSIGNER="$(find "$SDK_ROOT"/build-tools -name apksigner -print -quit)"
          if [ -z "$ZIPALIGN" ] || [ -z "$APKSIGNER" ]; then
            echo "zipalign or apksigner not found under $SDK_ROOT" >&2
            exit 1
          fi

          ALIGNED_APK="${UNSIGNED_APK%-unsigned.apk}-unsigned-aligned.apk"
          SIGNED_APK="${UNSIGNED_APK%-unsigned.apk}.apk"

          "$ZIPALIGN" -f -p 4 "$UNSIGNED_APK" "$ALIGNED_APK"
          "$APKSIGNER" sign \
            --ks android/app/leanx-release.keystore \
            --ks-pass pass:Yesbody \
            --key-pass pass:Yesbody \
            --out "$SIGNED_APK" \
            "$ALIGNED_APK"

          echo "signed_apk=$SIGNED_APK" >> "$GITHUB_OUTPUT"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: LeanX-release
          path: ${{ steps.sign-apk.outputs.signed_apk }}
          if-no-files-found: error
